# this is an example of the Sync Gateway API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Sync Gateway
  description: |
    Documentation for the Sync Gateway Public REST API. This page is generated from the Sync Gateway Public Swagger spec, the exact same information is also available at [developer.couchbase.com/mobile/swagger/sync-gateway-public](http://developer.couchbase.com/mobile/swagger/sync-gateway-public/).
  version: "1.2.1"
# the domain of the service
host: localhost:4984
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
basePath: /
produces:
  - application/json
################################################################################
#                                   Parameters                                 #
################################################################################
parameters:
  $ref: ./parameters/index.yaml
################################################################################
#                                   Paths                                      #
################################################################################
paths:
  /:
    get:
      tags:
        - Server
      summary: Server
      description: |
        Returns meta-information about the server.
      responses:
        200:
          description: Meta-information about the server.
          schema:
            type: object
            properties:
              couchdb:
                type: string
                description: Contains the string 'Welcome' (this is required for compatibility with CouchDB)
              vendor/name:
                type: string
                description: The server type ('Couchbase Sync Gateway)
              vendor/version:
                type: string
                description: The server version
              version:
                type: string
                description: Sync Gateway version number
  /_replicate:
    $ref: ./paths/_replicate.yaml
  /{db}:
    $ref: ./paths/db/db.yaml
  /{db}/{doc}:
    $ref: ./paths/db/doc/doc.yaml
  /{db}/_local/{local_doc}:
    parameters:
      - $ref: '#/parameters/db'
      - $ref: '#/parameters/local_doc'
    get:
      tags:
        - Document
      summary: Get local doc
      description: |
        This request retrieves a local document. Local document IDs begin with _local/. Local documents are not replicated or indexed, don't support attachments, and don't save revision histories. In practice they are almost only used by Couchbase Lite's replicator, as a place to store replication checkpoint data.
      responses:
        200:
          description: The message body contains the following objects in a JSON document.
          schema:
            $ref: '#/definitions/Success'
    put:
      tags:
        - Document
      summary: Create or update a local document
      description: |
        This request creates or updates a local document. Local document IDs begin with _local/. Local documents are not replicated or indexed, don't support attachments, and don't save revision histories. In practice they are almost only used by the client's replicator, as a place to store replication checkpoint data.
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/Success'
    delete:
      tags:
        - Document
      summary: Delete a local document
      description: |
        This request deletes a local document. Local document IDs begin with _local/. Local documents are not replicated or indexed, don't support attachments, and don't save revision histories. In practice they are almost only used by Couchbase Lite's replicator, as a place to store replication checkpoint data.
      parameters:
        - $ref: '#/parameters/rev'
      responses:
        200:
          description: Document successfully removed
          schema:
            $ref: '#/definitions/Success'
  /{db}/{doc}/{attachment}:
    parameters:
      - $ref: '#/parameters/db'
      - $ref: '#/parameters/doc'
      - $ref: '#/parameters/attachment'
    get:
      tags:
        - Attachment
      summary: Get attachment
      description: |
        This request retrieves a file attachment associated with the document. The raw data of the associated attachment is returned (just as if you were accessing a static file). The Content-Type response header is the same content type set when the document attachment was added to the database.
      parameters:
        - $ref: '#/parameters/rev'
      responses:
        200:
          description: The message body contains the attachment, in the format specified in the Content-Type header.
        304:
          description: Not Modified, the attachment wasn't modified if ETag equals the If-None-Match header
        404:
          description: Not Found, the specified database, document or attachment was not found.
    put:
      tags:
        - Attachment
      summary: Add or update document
      description: |
        This request adds or updates the supplied request content as an attachment to the specified document. The attachment name must be a URL-encoded string (the file name). You must also supply either the rev query parameter or the If-Match HTTP header for validation, and the Content-Type headers (to set the attachment content type).

          When uploading an attachment using an existing attachment name, the corresponding stored content of the database will be updated. Because you must supply the revision information to add an attachment to the document, this serves as validation to update the existing attachment.

          Uploading an attachment updates the corresponding document revision. Revisions are tracked for the parent document, not individual attachments.
      responses:
        200:
          description: Operation completed successfully
          schema:
            $ref: '#/definitions/Success'
        409:
          description: Conflict, the document revision wasn't specified or it's not the latest.
  /{db}/_all_docs:
    parameters:
      - $ref: '#/parameters/db'
    get:
      tags:
       - Database
      summary: All docs
      description: |
        This request returns a built-in view of all the documents in the database.
      parameters:
        - $ref: '#/parameters/access'
        - $ref: '#/parameters/channels'
        - $ref: '#/parameters/include_docs'
        - $ref: '#/parameters/revs'
        - $ref: '#/parameters/update_seq'
      responses:
        200:
          description: Request completed successfully
          schema:
            type: object
            properties:
              offset:
                type: string
                description: Starting index of the returned rows.
              rows:
                type: array
                description: Array of row objects.
                items:
                  $ref: '#/definitions/QueryRow'
              total_rows:
                type: integer
                description: Number of documents in the database. This number is not the number of rows returned.
              update_seq:
                type: integer
                description: Sequence identifier of the underlying database that the view reflects.
    post:
      tags:
        - Database
      summary: All docs
      description: |
        This request retrieves specified documents from the database.
      parameters:
        - $ref: '#/parameters/db'
        - $ref: '#/parameters/access'
        - $ref: '#/parameters/channels'
        - $ref: '#/parameters/include_docs'
        - $ref: '#/parameters/revs'
      responses:
        200:
          description: Request completed successfully
          schema:
            type: object
            properties:
              offset:
                type: string
                description: Starting index of the returned rows.
              rows:
                type: array
                description: Array of row objects.
                items:
                  $ref: '#/definitions/QueryRow'
              total_rows:
                type: integer
                description: Number of documents in the database. This number is not the number of rows returned.
              update_seq:
                type: integer
                description: Sequence identifier of the underlying database that the view reflects.
  /{db}/_bulk_docs:
    $ref: ./paths/db/_bulk_docs.yaml
  /{db}/_bulk_get:
    $ref: ./paths/db/_bulk_get.yaml
  /{db}/_changes:
    $ref: ./paths/db/_changes.yaml
  /{db}/_design/{ddoc}:
    $ref: ./paths/db/_design/ddoc/ddoc.yaml
  /{db}/_design/{ddoc}/_view/{view}:
    $ref: ./paths/db/_design/ddoc/_view/view.yaml
################################################################################
#                                 Definitions                                  #
################################################################################
definitions:
  $ref: ./definitions/index.yaml
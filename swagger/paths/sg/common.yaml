/:
  get:
    tags:
      - server
    summary: Server
    description: |
      Returns meta-information about the server.
    responses:
      200:
        description: Meta-information about the server.
        schema:
          type: object
          properties:
            couchdb:
              type: string
              description: Contains the string 'Welcome' (this is required for compatibility with CouchDB)
            vendor/name:
              type: string
              description: The server type ('Couchbase Sync Gateway)
            vendor/version:
              type: string
              description: The server version
            version:
              type: string
              description: Sync Gateway version number
/_replicate:
  post:
    tags:
      - server
    description: |
      This request starts or cancels a database replication operation.
      
      You can cancel continuous replications by adding the cancel field to the JSON request object and setting the value to true. Note that the structure of the request must be identical to the original for the cancellation request to be honoured. For example, if you requested continuous replication, the cancellation request must also contain the continuous field.
    parameters:
      - $ref: '#/parameters/replication'
    responses:
      200:
        description: 200 OK
        schema:
          type: object
          properties:
            ok:
              type: boolean
              description: Indicates whether the replication operation was successful
            session_id:
              type: string
              description: Session identifier
/{db}/_local/{local_doc}:
  parameters:
    - $ref: '#/parameters/db'
    - $ref: '#/parameters/local_doc'
  get:
    tags:
      - document
    summary: Get local doc
    description: |
      This request retrieves a local document. Local document IDs begin with _local/. Local documents are not replicated or indexed, don't support attachments, and don't save revision histories. In practice they are almost only used by Couchbase Lite's replicator, as a place to store replication checkpoint data.
    responses:
      200:
        description: The message body contains the following objects in a JSON document.
        schema:
          $ref: '#/definitions/Success'
  put:
    tags:
      - document
    summary: Create or update a local document
    description: |
      This request creates or updates a local document. Local document IDs begin with _local/. Local documents are not replicated or indexed, don't support attachments, and don't save revision histories. In practice they are almost only used by the client's replicator, as a place to store replication checkpoint data.
    responses:
      201:
        description: Created
        schema:
          $ref: '#/definitions/Success'
  delete:
    tags:
      - document
    summary: Delete a local document
    description: |
      This request deletes a local document. Local document IDs begin with _local/. Local documents are not replicated or indexed, don't support attachments, and don't save revision histories. In practice they are almost only used by Couchbase Lite's replicator, as a place to store replication checkpoint data.
    parameters:
      - $ref: '#/parameters/rev'
    responses:
      200:
        description: Document successfully removed
        schema:
          $ref: '#/definitions/Success'
/{db}/{doc}/{attachment}:
  parameters:
    - $ref: '#/parameters/db'
    - $ref: '#/parameters/doc'
    - $ref: '#/parameters/attachment'
  get:
    tags:
      - attachment
    summary: Get attachment
    description: |
      This request retrieves a file attachment associated with the document. The raw data of the associated attachment is returned (just as if you were accessing a static file). The Content-Type response header is the same content type set when the document attachment was added to the database.
    parameters:
      - $ref: '#/parameters/rev'
    responses:
      200:
        description: The message body contains the attachment, in the format specified in the Content-Type header.
      304:
        description: Not Modified, the attachment wasn't modified if ETag equals the If-None-Match header
      404:
        description: Not Found, the specified database, document or attachment was not found.
  put:
    tags:
      - attachment
    summary: Add or update document
    description: |
      This request adds or updates the supplied request content as an attachment to the specified document. The attachment name must be a URL-encoded string (the file name). You must also supply either the rev query parameter or the If-Match HTTP header for validation, and the Content-Type headers (to set the attachment content type).

        When uploading an attachment using an existing attachment name, the corresponding stored content of the database will be updated. Because you must supply the revision information to add an attachment to the document, this serves as validation to update the existing attachment.

        Uploading an attachment updates the corresponding document revision. Revisions are tracked for the parent document, not individual attachments.
    responses:
      200:
        description: Operation completed successfully
        schema:
          $ref: '#/definitions/Success'
      409:
        description: Conflict, the document revision wasn't specified or it's not the latest.
/{db}/_all_docs:
  parameters:
    - $ref: '#/parameters/db'
  get:
    tags:
     - database
    summary: All docs
    description: |
      This request returns a built-in view of all the documents in the database.
    parameters:
      - $ref: '#/parameters/access'
      - $ref: '#/parameters/channels'
      - $ref: '#/parameters/include_docs'
      - $ref: '#/parameters/revs'
      - $ref: '#/parameters/update_seq'
    responses:
      200:
        description: Request completed successfully
        schema:
          type: object
          properties:
            offset:
              type: string
              description: Starting index of the returned rows.
            rows:
              type: array
              description: Array of row objects.
              items:
                $ref: '#/definitions/QueryRow'
            total_rows:
              type: integer
              description: Number of documents in the database. This number is not the number of rows returned.
            update_seq:
              type: integer
              description: Sequence identifier of the underlying database that the view reflects.
  post:
    tags:
      - database
    summary: All docs
    description: |
      This request retrieves specified documents from the database.
    parameters:
      - $ref: '#/parameters/db'
      - $ref: '#/parameters/access'
      - $ref: '#/parameters/channels'
      - $ref: '#/parameters/include_docs'
      - $ref: '#/parameters/revs'
    responses:
      200:
        description: Request completed successfully
        schema:
          type: object
          properties:
            offset:
              type: string
              description: Starting index of the returned rows.
            rows:
              type: array
              description: Array of row objects.
              items:
                $ref: '#/definitions/QueryRow'
            total_rows:
              type: integer
              description: Number of documents in the database. This number is not the number of rows returned.
            update_seq:
              type: integer
              description: Sequence identifier of the underlying database that the view reflects.
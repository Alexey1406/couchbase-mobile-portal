<?xml version="1.0" encoding="UTF-8"?>
<guide xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../docs.xsd" id="running-replications">
    <title>Running replications using Sync Gateway</title>
    <description>A guide to running active replications using Sync Gateway.</description>
    <introduction>
        <paragraph>Sync Gateway has the ability to run active one way replications between two databases.</paragraph>
        <paragraph>
            <strong>Features</strong>
        </paragraph>
        <unordered-list>
            <list-item>
                Json configuration to specify replications
            </list-item>
            <list-item>
                Supports multiple replications running concurrently
            </list-item>
            <list-item>
                Can run both OneShot and Continuous replications
            </list-item>
            <list-item>
                Does not store anything persistently
            </list-item>
            <list-item>
                Stateless -- can be interrupted/restarted anytime without negative side effects.
            </list-item>
            <list-item>
                Filter replications using channels.
            </list-item>
        </unordered-list>
        <paragraph>
            <strong>Limitations</strong>
        </paragraph>
        <unordered-list>
            <list-item>
                Only works on recent versions of Sync Gateway (after commit 50d30eb3d on March 7, 2014)
            </list-item>
            <list-item>
                Requires access to Sync Gateway Admin port (4985)
            </list-item>
        </unordered-list>
    </introduction>
    <articles>
        <article id="running-replications-via-the-rest-api">
            <title>Running replications via the REST API</title>
            <description>This article walks you through how to run replications from the ADMIN REST API.</description>
            <introduction>
                <paragraph><paragraph>A replication is run by sending a POST request the server endpoint /_replicate, with a JSON object defining the replication parameters.</paragraph>
 Both one-shot and continuous replications can be run, each replication is one-way between two local or remote Sync Gateway databases. Multiple replications can run simultaneously, supporting bi-directional replications and different replication topologies.</paragraph>
            </introduction>

            <topics>
                <topic id="sample-replications">
                    <title>Sample replications.</title>
                    <body>
                                                <paragraph>
                            These parameters start a one-shot replication between two database on the local Sync Gateway instance. The request will block until the replication has completed.
                        </paragraph>
                        <code-block>
{
    "source": "db",
    "target": "db-copy"
}
                        </code-block>
                        <paragraph>
                            These parameters start a one-shot replication between one database on the local Sync Gateway instance and one on a remote Sync Gateway instance. The request will return immediately and the replication will run asynchronously.
                        </paragraph>
                        <code-block>
{
    "source": "db",
    "target": "http://example.com:4985/db-copy",
    "async":true
}
                        </code-block>
                        <paragraph>
                            These parameters start a continuous replication between one database on the local Sync Gateway instance and one on a remote Sync Gateway instance. The request will return immediately and the replication will run asynchronously.
                        </paragraph>
                        <code-block>
{
    "source": "db",
    "target": "http://example.com:4985/db-copy"
    "continuous":true
}
                            </code-block>
                        <paragraph>
                            These parameters start a continuous replication between one database on the local Sync Gateway instance and one on a remote Sync Gateway instance. The replicator will batch up to 1000 revisions at a time, this will improve replication performance buit will use more memory resources. Source database documents will be filtered so that only those tagged with the channel names "channel1" or "channel2" are replicated. 
                        </paragraph>
                        <code-block>
{
    "source": "db",
    "target": "http://example.com:4985/db-copy"
    "continuous":true,
    "changes_feed_limit":1000,
    "filter":"sync_gateway/bychannel",
    "query_params":["channel1","channel2"]
}
                        </code-block>
                    </body>
                </topic>
                <topic id="Configuration properties">
                    <title>Configuration Properties</title>
                    <body>
                        <paragraph>
                            The _replicate JSON Object supports the following properties.
                        </paragraph>
<table>
					<header>
						<row>
							<entry>Name</entry>
							<entry>Type</entry>
							<entry>Description</entry>
							<entry>Default</entry>
						</row>
					</header>
					<body>
						<row>
							<entry><code>source</code></entry>
							<entry>URL</entry>
							<entry><emphasis>Required</emphasis>. A URL pointing to the source database for the replication, the URL may be relative i.e. just the name of a local database on the Sync Gateway instance. The URL may point to the Admin REST API which will replicate all documents in the DB, or it may point to the public REST API which will only copy documents in the the users assigned channels.</entry>
							<entry>none</entry>
						</row>
						<row>
							<entry><code>target</code></entry>
							<entry>URL</entry>
							<entry><emphasis>Required</emphasis>. A URL pointing to the target database for the replication, the URL may be relative i.e. just the name of a local database on the Sync Gateway instance. The URL may point to the Admin REST API or it may point to the public REST API, this will impact the behaviour of the target database sync function.</entry>
							<entry>none</entry>
						</row>
						<row>
							<entry><code>continuous</code></entry>
							<entry>Boolean</entry>
							<entry><emphasis>Optional</emphasis>. Indicates whether the replication should be a one-shot or continuous replication.</entry>
							<entry>false</entry>
						</row>
						<row>
							<entry><code>filter</code></entry>
							<entry>String</entry>
							<entry><emphasis>Optional</emphasis>. Passes the name of filter to apply to the source docuemnts, currently the only supported filter is  <emphasis>&quot;sync_gateway/bychannel&quot;</emphasis>, this will replicate documents only from the set of named channels.</entry>
							<entry>None</entry>
						</row>
						<row>
							<entry><code>query_params</code></entry>
							<entry>Object</entry>
							<entry><emphasis>Optional</emphasis>. Passes parameters to the filter, for the <emphasis>&quot;sync_gateway/bychannel&quot;</emphasis> filter the value should be an array or channel names (JSON strings).</entry>
							<entry>none</entry>
						</row>
						<row>
							<entry><code>cancel</code></entry>
							<entry>Boolean</entry>
							<entry><emphasis>Optional</emphasis>. Indicates that a running replication task should be cancelled, the running task is identified by passing its <emphasis>replication_id</emphasis> or by passing the original <emphasis>source</emphasis>source and <emphasis>target</emphasis> values.</entry>
							<entry>false</entry>
						</row>
						<row>
							<entry><code>replication_id</code></entry>
							<entry>String</entry>
							<entry><emphasis>Optional</emphasis>. The id of the active replication task to be cancelled, this parameter is only used if the <emphasis>cancel</emphasis> parameter is true.</entry>
							<entry>false</entry>
						</row>
						<row>
							<entry><code>async</code></entry>
							<entry>Boolean</entry>
							<entry><emphasis>Optional</emphasis>. Indicates that a one-shot replication should be run asynchronously and the request should return immediately. Replication progress can be monitored by using the _active_tasks resource.</entry>
							<entry>false</entry>
						</row>
						<row>
							<entry><code>changes_feed_limit</code></entry>
							<entry>Number</entry>
							<entry><emphasis>Optional</emphasis>. The maximum number of change entries to pull in each loop of a continuous changes feed.</entry>
							<entry>50</entry>
						</row>
					</body>
				</table>
                    </body>
                </topic>
            </topics>
        </article>
        <article id="running-replications-via-sync-gateway-config">
            <title>Running replications via Sync Gateway config</title>
            <description>This article walks you through on how to define replications in the Sync Gateway config.</description>
            <introduction>
                <paragraph>Having Sync Gateway start replications on startup can support use cases such as continuous backup, cross cluster replication, or pulling the latest versions of a set set of root documents from a CMS.</paragraph>
                        </introduction>
            <topics>
                <topic id="sample-configuration">
                    <title>Sample configuration.</title>
                    <body>
                        <paragraph>
                            Replications are defined in the top level "replications" property of the Sync Gateway configuation, each replication must have a unique property name which will be used as it's task "replication_id".</paragraph>
                        <paragraph>One-shot replications are always run asynchronously even if the "async" property is not set to true.</paragraph>
                        <paragraph>A One-shot replication that references a local database for either source or target, will be run after a short delay (5 sencods) in order to allow the local REST API's to come up.
                        </paragraph>
                        <code-block>
{
    "log":["*"],                        
    "replications":[
        "one-shot-local-dbs":{
            "source": "db",
            "target": "db-copy"
        },
        "one-shot-local-to-remote":{                        {
            "source": "db",
            "target": "http://example.com:4985/db-copy"
        },
        "continuous-remote-local":{
            "source": "http://example.com:4985/db-backup",
            "target": "db"
            "continuous":true
        },
        "continuous-filtered":{
            "source": "db",
            "target": "http://example.com:4985/db-copy"
            "continuous":true,
            "changes_feed_limit":1000,
            "filter":"sync_gateway/bychannel",
            "query_params":["channel1","channel2"]
        }
    ],
    "databases": {
        "db": {
            "server": "walrus:",
            "bucket": "db",
            "users": {
                "GUEST": {"disabled": false, "admin_channels": ["*"]}
            }
        },
        "db-copy": {
            "server": "walrus:",
            "bucket": "db-copy",
            "users": {
                "GUEST": {"disabled": false, "admin_channels": ["*"]}
            }
        }
    }                     
}
                        </code-block>
                    </body>
                </topic>
                </topics>
        </article>
        <article id="monitoring-active-replication-tasks">
            <title>Monitoring active replication tasks</title>
            <description>This article walks you through on how monitor the progress of active replication tasks.</description>
            <introduction>
                <paragraph>By default a simple one-shot replication blocks until it is complete and returns the stats for the completed task. Async one-shot and continuous replications return immediately with the in flight task stats. This article shows you how to monitor the ongoing progress of active tasks.</paragraph>
            </introduction>
            <topics>
                <topic id = "Acive tasks request">
                    <title>Active Tasks request</title>
                    <body>
                        <paragraph>
                            You can get a list of active replication tasks by sending a GET request the server endpoint /_active_tasks, this will return a list of all running one-shot and continuous replications for the current Sync Gateway instance.
                        </paragraph>
                    </body>
                </topic>
                <topic id = "Acive tasks reposne">
                    <title>Active Tasks response</title>
                    <body>
                        <paragraph>
                            The response is a JSON array of active task objects, each Object contains the original request parameters for the replication, a unique replication_id and some stats for the replication instance e.g.
                        </paragraph>
                        <code-block>
[
    {
        "type":"replication",
        "replication_id":"6a4924c24424b635a80f50cd660fb192",
        &quot;continuous&quot;:true,
        &quot;source&quot;:&quot;http://example.com:4985/source",
        &quot;target&quot;:&quot;http://example.com:4985/target&quot;,
        &quot;docs_read&quot;:0,
        &quot;docs_written&quot;:0,
        &quot;doc_write_failures&quot;:0,
        &quot;start_last_seq:&quot;0,
        &quot;end_last_seq&quot;:null
    },
    {
        &quot;type&quot;:"&quot;replication&quot;,
        &quot;replication_id&quot;:&quot;active-to-backup&quot;,
        &quot;continuous&quot;:true,
        &quot;source&quot;:&quot;http://example2.com:4985/active&quot;,
        &quot;target&quot;:&quot;http://example2.com:4985/backup&quot;,
        &quot;docs_read&quot;:1000,
        &quot;docs_written&quot;:850,
        &quot;doc_write_failures&quot;:10,
        &quot;start_last_seq:&quot;0,
        &quot;end_last_seq&quot;:25680
    }
]	
                        </code-block>

                    </body>
                </topic>
            </topics>
                        </article>
<article id="caceling-active-replication-tasks">
            <title>Canceling active replication tasks</title>
            <description>This article walks you through on how cancel active replication tasks.</description>
            <introduction>
                <paragraph>After walking through these steps, you will be able to cancel an active replication task.</paragraph>
            </introduction>
            <topics>
                <topic id = "cancel-replication-request">
                    <title>Cancel replication request</title>
                    <body>
                        <paragraph>An active replication task is canceled by sending a POST request the server endpoint /_replicate, with a JSON object. The JSON Object must contain the "cancel" property set to true and either a valid "replication_id" or the idevntical source and target values used to start the replication.</paragraph>
            <paragraph>
                            This will cancel an active replication with a "replication_id" of "my-one-shot-replication", the "replication_id" value can be obtained by sending a request to _active_tasks.
                        </paragraph>
                        <code-block>
{
    "cancel": true,
    "replication_id": "my-one-shot-replication"
}
            </code-block>
            <paragraph>
                            This will cancel an active replication that was started with "source" and "target" values matching those in the cancel request.
                        </paragraph>
                        <code-block>
{
    "cancel":true,          
    "source": "db",
    "target": "db-copy"
}
                        </code-block>

                    </body>
                </topic>
            </topics>
                    </article>
    </articles>
</guide>

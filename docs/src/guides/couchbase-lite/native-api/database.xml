<?xml version="1.0" encoding="UTF-8"?>
<article xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="../../../docs.xsd"
         id="database">
   <title>Database</title>
   <description>Guide to using the Database.</description>
    <introduction>
        <paragraph>Databases are represented by the <code>Database</code> class and managed by the <code>Manager</code> class.</paragraph>
        <paragraph>When your app is launched for the first time, you need to set up a database. 
           Depending on your app design, you might need to <ref href="#setting-up-the-initial-database">set up an 
              initial database</ref> the first time a user launches your app and then <ref href="#connecting-to-an-existing-database">connect 
                 to the existing database</ref> upon subsequent launches. Each time the app launches, you must check whether the database exists in Couchbase Lite.</paragraph>
        <paragraph>Database names must begin with an lowercase letter. You can test a database name for validity by 
           calling <code>isValidDatabaseName()</code>. The following characters are valid in database names:</paragraph>
        <unordered-list>
            <list-item>lowercase letters: <code>a-z</code>
            </list-item>
            <list-item>numbers: <code>0-9</code>
            </list-item>
            <list-item>special characters: <code>_$()+-/</code>
            </list-item>
        </unordered-list>
    </introduction>
   <topics>
      <topic id="setting-up-the-initial-database">
         <title>Creating A database</title>
         <body>
            <paragraph>
               You can set up the initial database in your app by using any of the following methods:
            </paragraph>
            <unordered-list>
               <list-item><ref href="#creating-a-database-in-your-app">Create a database in your app</ref></list-item>
               <list-item><ref href="#pulling-a-database-from-a-server">Pull a database from a server</ref></list-item>
               <list-item><ref href="#installing-a-prebuilt-database">Install a prebuilt database</ref></list-item>
            </unordered-list>
         </body>
      </topic>
      <topic id="creating-a-database-in-your-app">
         <title>Creating a database in your app</title>
         <body>
            <paragraph>
               You need to create a <code>Database</code> instance.
            </paragraph>
         </body>
      </topic>
      <topic id="pulling-a-database-from-a-server">
         <title>Pulling a Database from a Server</title>
         <body>
            <paragraph>
               You need to create a <code>Database</code> instance.
            </paragraph>
         </body>
      </topic>
      <topic id="installing-a-prebuilt-database">
         <title>Installing a prebuilt database</title>
         <body>
            <paragraph>
               You need to create a <code>Database</code> instance.
            </paragraph>
         </body>
      </topic>
      <topic id="connecting-to-an-existing-database">
         <title>Connecting to an existing database</title>
         <body>
            <paragraph>
               You need to create a <code>Database</code> instance.
            </paragraph>
         </body>
      </topic>
      <topic id="database-properties">
         <title>Database properties</title>
         <body>
            <paragraph>
               You need to create a <code>Database</code> instance.
            </paragraph>
            <unordered-list>
               <list-item>name</list-item>
               <list-item>manager</list-item>
               <list-item>documentCount</list-item>
               <list-item>lastSequenceNumber</list-item>
               <list-item>internalURL</list-item>
            </unordered-list>
         </body>
      </topic>
      <topic id="database-housekeeping">
         <title>Database housekeeping</title>
         <body>
            <paragraph>
               You need to create a <code>Database</code> instance.
            </paragraph>
            <unordered-list>
               <list-item>compact</list-item>
               <list-item>maxRevTreeDepth</list-item>
               <list-item>replaceUUIDs</list-item>
            </unordered-list>
         </body>
      </topic>
      <topic id="concurrency-support">
         <title>Concurrency support</title>
         <body>
            <paragraph>
               You need to create a <code>Database</code> instance.
            </paragraph>
         </body>
      </topic>
      <topic id="database-notifications">
         <title>Database notifications</title>
         <body>
            <paragraph>
               You can register for notifications when documents are added/updated/deleted from a datbase.
            </paragraph>
            <code-set>
               <code-block language="objective-c"><![CDATA[
                  // create a shared instance of CBLManager
                  CBLManager *manager = [CBLManager sharedInstance];
        
                  // get existing database
                  NSError *error;
                  CBLDatabase db = [manager existingDatabaseNamed: @"my-database" error: &error];

                  [[NSNotificationCenter defaultCenter] addObserverForName: kCBLDatabaseChangeNotification
                                                      object: db
                                                       queue: nil
                                                  usingBlock: ^(NSNotification *n) {
                                                      //
                                                      // Process the notification here
                                                      //
                                                  }];
                  ]]></code-block>
               <code-block language="java"><![CDATA[
                  - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
                  {
                      /*
                       * In Objective-C the <code>Manager</code> shared instance and all the objects descending
                       * from it may only be used on the main thread.
                       */                      
                      CBLManager *manager = [CBLManager sharedInstance];
                      if (!manager) {
                          NSLog(@"Cannot create Manager instance");
                          exit(-1);
                      }
                      return YES;
                  }
                  ]]></code-block>
            </code-set>
         </body>
      </topic>
      <topic id="deleting-a-database">
         <title>Deleting a database</title>
         <body>
            <paragraph>
               If you no longer need any of the documents in a database and wish to release the disk 
               resources associated with i. You can delete a database, this will remove all database 
               files and any associated attachments.
            </paragraph>
            <code-set>
               <code-block language="objective-c"><![CDATA[
                  // create a shared instance of CBLManager
                  CBLManager *manager = [CBLManager sharedInstance];
        
                  NSString* dbName = @"my-database";
                  // get existing database
                  NSError *error;
                  CBLDatabase db = [manager existingDatabaseNamed: dbName error: &error];
                  
                  if(db && !error) {
                      BOOL sucess = [db deleteDatabase: &error];
                      
                      if(error)
                          NSLog(@"Cannot delete database %@",dbName);
                  } else {
                      NSLog(@"Cannot get existing database, %@",dbName);
                  }
                  ]]></code-block>
               <code-block language="java"><![CDATA[
                  try {
                       Manager manager = new Manager(new AndroidContext(mContext), Manager.DEFAULT_OPTIONS);
                       
                       Database db = manager.getExistingDatabase("my-database");
                       
                       id(db != null)
                           db.delete();
                   
                   } catch (IOException e) {
                       Log.e(TAG, "Cannot delete database", e);
                       return;
                   }
                  ]]></code-block>
            </code-set>
         </body>
      </topic>
   </topics>
</article>

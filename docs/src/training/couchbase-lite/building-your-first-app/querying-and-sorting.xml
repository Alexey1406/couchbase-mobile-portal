<?xml version="1.0" encoding="UTF-8"?>
<lesson xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="../../../docs.xsd"
         id="querying-and-sorting">
   <title>Querying and Sorting</title>
   <description>Learn how to to query in Couchbase Lite.</description>
   <introduction>
      <paragraph>This tutorial demonstrates:</paragraph>
      <unordered-list>
         <list-item>Running a query (*TODO*)</list-item>
      </unordered-list>
   </introduction>
   <tasks>
      <task id="how-to-run-a-query">
         <title>Run a query</title>
         <body>
            <paragraph>Searching for data in a Couchbase Lite Database is done in a two-stage process based on a technique called MapReduce.</paragraph>
            <paragraph>First you define a Couchbase Lite View that uses a map function to extract information out of every document. The map function is written in the same language as your app, so it’s very flexible. The result of applying the map function to the database is an ordered set of key-value pairs that is stored persistently in the database and updated incrementally as documents change.</paragraph>
            <paragraph>The second step is querying the View to get actual data. You give a range of keys, and get back all the key-value pairs in that range, sorted by key.</paragraph>
            <paragraph>Remember: a View is not a query, it’s an index. Views are persistent, and need to be updated (incrementally) whenever documents change, so having large numbers of them can be expensive. Instead, it’s better to have a smaller number of Views that can be queried in interesting ways.</paragraph>
            <code-block language="objective-c">
               //TBD
            </code-block> 
         </body>
      </task>
   </tasks>
</lesson>
